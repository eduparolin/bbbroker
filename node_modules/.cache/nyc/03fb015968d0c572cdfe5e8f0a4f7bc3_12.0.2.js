var cov_fes0m8ixv=function(){var path="/Users/eduardoparolin/Documents/Projetos/Tunts/PGMais/pg013-broker-gsm/modules/chips/Chip.js",hash="6b70e338a5288249f05851d3507c99efc9ad5258",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/eduardoparolin/Documents/Projetos/Tunts/PGMais/pg013-broker-gsm/modules/chips/Chip.js",statementMap:{"0":{start:{line:1,column:31},end:{line:1,column:79}},"1":{start:{line:3,column:14},end:{line:3,column:40}},"2":{start:{line:5,column:13},end:{line:20,column:1}},"3":{start:{line:22,column:0},end:{line:30,column:2}},"4":{start:{line:23,column:15},end:{line:23,column:32}},"5":{start:{line:25,column:4},end:{line:27,column:5}},"6":{start:{line:26,column:8},end:{line:26,column:42}},"7":{start:{line:29,column:4},end:{line:29,column:16}},"8":{start:{line:32,column:0},end:{line:41,column:2}},"9":{start:{line:33,column:4},end:{line:40,column:7}},"10":{start:{line:43,column:0},end:{line:43,column:22}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:22,column:19},end:{line:22,column:20}},loc:{start:{line:22,column:33},end:{line:30,column:1}},line:22},"1":{name:"(anonymous_1)",decl:{start:{line:32,column:28},end:{line:32,column:29}},loc:{start:{line:32,column:56},end:{line:41,column:1}},line:32}},branchMap:{"0":{loc:{start:{line:25,column:4},end:{line:27,column:5}},type:"if",locations:[{start:{line:25,column:4},end:{line:27,column:5}},{start:{line:25,column:4},end:{line:27,column:5}}],line:25}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},f:{"0":0,"1":0},b:{"0":[0,0]},_coverageSchema:"d34fc3e6b8297bcde183f5492bcb8fcb36775295"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const[Sequelize,sequelize]=(cov_fes0m8ixv.s[0]++,require('../common/services/database.service')());//const Channel = require('../channel/Channel');
const Route=(cov_fes0m8ixv.s[1]++,require('../routes/Route'));const Chip=(cov_fes0m8ixv.s[2]++,sequelize.define('chip',{id:{type:Sequelize.UUID,primaryKey:true,defaultValue:Sequelize.UUIDV4},number:{type:Sequelize.STRING(15),allowNull:false},received:{type:Sequelize.INTEGER,allowNull:false},sent_on_net:{type:Sequelize.INTEGER,allowNull:false},limit_on_net:{type:Sequelize.INTEGER,allowNull:false},sent_off_net:{type:Sequelize.INTEGER,allowNull:false},limit_off_net:{type:Sequelize.INTEGER,allowNull:false},operator:{type:Sequelize.STRING(10),allowNull:false},base_day:{type:Sequelize.STRING(2),allowNull:false}},{tableName:'chip'}));cov_fes0m8ixv.s[3]++;Chip.getChipById=function(id){cov_fes0m8ixv.f[0]++;let chip=(cov_fes0m8ixv.s[4]++,this.findById(id));cov_fes0m8ixv.s[5]++;if(!chip){cov_fes0m8ixv.b[0][0]++;cov_fes0m8ixv.s[6]++;throw new Error('Chip not found');}else{cov_fes0m8ixv.b[0][1]++;}cov_fes0m8ixv.s[7]++;return chip;};cov_fes0m8ixv.s[8]++;Chip.getRouteByChipNumber=async function(chipNumber){cov_fes0m8ixv.f[1]++;cov_fes0m8ixv.s[9]++;return this.findOne({where:{number:chipNumber},include:{model:Route}});};cov_fes0m8ixv.s[10]++;module.exports=Chip;